#!/bin/bash

# chezmoi run_once script to install zsh enhancements
# This script will only run once unless the filename changes

set -euo pipefail

echo "🚀 Installing ZSH enhancements..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if zsh is installed
if ! command -v zsh >/dev/null 2>&1; then
    print_error "ZSH is not installed. Please install zsh first."
    exit 1
fi

print_info "ZSH version: $(zsh --version)"

# Install Oh My Zsh if not already installed
if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
    print_info "Installing Oh My Zsh..."
    
    # Download and install Oh My Zsh
    if command -v curl >/dev/null 2>&1; then
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    elif command -v wget >/dev/null 2>&1; then
        sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)" "" --unattended
    else
        print_error "Neither curl nor wget is available. Cannot install Oh My Zsh."
        exit 1
    fi
    
    print_success "Oh My Zsh installed successfully!"
else
    print_info "Oh My Zsh already installed, skipping..."
fi

# Install zsh-autosuggestions plugin
ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
AUTOSUGGESTIONS_DIR="$ZSH_CUSTOM/plugins/zsh-autosuggestions"

if [[ ! -d "$AUTOSUGGESTIONS_DIR" ]]; then
    print_info "Installing zsh-autosuggestions plugin..."
    git clone https://github.com/zsh-users/zsh-autosuggestions "$AUTOSUGGESTIONS_DIR"
    print_success "zsh-autosuggestions installed!"
else
    print_info "zsh-autosuggestions already installed, updating..."
    cd "$AUTOSUGGESTIONS_DIR" && git pull
fi

# Install zsh-syntax-highlighting plugin
SYNTAX_HIGHLIGHTING_DIR="$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"

if [[ ! -d "$SYNTAX_HIGHLIGHTING_DIR" ]]; then
    print_info "Installing zsh-syntax-highlighting plugin..."
    git clone https://github.com/zsh-users/zsh-syntax-highlighting "$SYNTAX_HIGHLIGHTING_DIR"
    print_success "zsh-syntax-highlighting installed!"
else
    print_info "zsh-syntax-highlighting already installed, updating..."
    cd "$SYNTAX_HIGHLIGHTING_DIR" && git pull
fi

# Install Powerlevel10k theme (optional)
P10K_DIR="$ZSH_CUSTOM/themes/powerlevel10k"

if [[ ! -d "$P10K_DIR" ]]; then
    print_info "Installing Powerlevel10k theme..."
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "$P10K_DIR"
    print_success "Powerlevel10k theme installed!"
    print_info "To use Powerlevel10k, change ZSH_THEME=\"powerlevel10k/powerlevel10k\" in your .zshrc"
else
    print_info "Powerlevel10k already installed, updating..."
    cd "$P10K_DIR" && git pull
fi

# Install additional useful tools if not present
print_info "Checking for additional useful tools..."

# Check for fzf
if ! command -v fzf >/dev/null 2>&1; then
    print_info "FZF not found. Installing..."
    
    if [[ -d "$HOME/.fzf" ]]; then
        print_info "FZF directory exists, updating..."
        cd "$HOME/.fzf" && git pull
    else
        git clone --depth 1 https://github.com/junegunn/fzf.git "$HOME/.fzf"
    fi
    
    # Install fzf
    "$HOME/.fzf/install" --all --no-bash --no-fish
    print_success "FZF installed!"
else
    print_info "FZF already available"
fi

# Suggest additional tools installation
print_info "Suggesting additional modern CLI tools:"
echo ""
echo "📦 You may want to install these modern CLI tools for better experience:"
echo ""
echo "🔍 Better find and grep:"
echo "   sudo apt install fd-find ripgrep  # On Ubuntu/Debian"
echo "   brew install fd ripgrep           # On macOS"
echo ""
echo "📄 Better cat and ls:"
echo "   sudo apt install bat exa          # On Ubuntu/Debian"
echo "   brew install bat exa              # On macOS"
echo ""
echo "📊 Better system monitoring:"
echo "   cargo install bottom dust         # Better top and du"
echo "   # or download from GitHub releases"
echo ""
echo "🎨 Fonts for better terminal experience:"
echo "   # Install Nerd Fonts for better icons support"
echo "   # https://github.com/ryanoasis/nerd-fonts"
echo ""

# Set zsh as default shell if not already
if [[ "$SHELL" != *"zsh" ]]; then
    print_warning "Current shell is not zsh: $SHELL"
    print_info "To change default shell to zsh, run:"
    echo "   chsh -s \$(which zsh)"
    echo ""
    print_info "Or add this to your ~/.bashrc to auto-switch:"
    echo "   exec zsh"
fi

print_success "ZSH enhancements installation completed!"
print_info "Restart your terminal or run 'source ~/.zshrc' to apply changes"

echo ""
echo "🎉 New features available:"
echo "📜 Enhanced history with better search (Ctrl+R)"
echo "💡 Auto-suggestions from history"
echo "🌈 Syntax highlighting"
echo "📁 Smart directory jumping with 'z' command"
echo "🔍 Fuzzy file finding with fzf (Ctrl+T)"
echo "🚀 Many useful aliases and functions"
echo "📋 Git integration and shortcuts"
echo ""
echo "🔧 New commands to try:"
echo "   mkcd <dir>     # Create and enter directory"
echo "   extract <file> # Smart extract any archive"
echo "   serve [port]   # Quick HTTP server"
echo "   sysinfo        # System information"
echo "   backup <file>  # Create timestamped backup"
echo "   fvim           # Fuzzy find and edit files"
echo "   fcd            # Fuzzy find and change directory"
echo "   lg             # LazyGit (if installed)" 